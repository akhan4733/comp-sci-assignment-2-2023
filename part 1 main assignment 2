#include "SinglyLinkedList.h" //header
#include <iostream>
#include <memory>

using namespace std;

int main() 
{


    // single linked list 
    SinglyLinkedList myList;

    std::cout << "Print list: \n";
    myList.print_list();
    std::cout << "List size: " << myList.get_size() << "\n";

    // adding the number back to list 
    myList.push_back(2);
    myList.push_back(4);
    myList.push_back(3);
    myList.push_back(1);
    std::cout << "Print list: \n";
    myList.print_list();
    std::cout << "List size: " << myList.get_size() << "\n";

    // addig number to the front 
    myList.push_front(5);
    myList.push_front(7);
    myList.push_front(6);
    std::cout << "Print list: \n";
    myList.print_list();
    std::cout << "List size: " << myList.get_size() << "\n";

    // poping node in front of list
    myList.pop_front();
    myList.pop_front();
    std::cout << "Print list: \n";
    myList.print_list();
    std::cout << "List size: " << myList.get_size() << "\n";

    // poping node in the bacl of list 
    myList.pop_back();
    myList.pop_back();
    std::cout << "Print list: \n";
    myList.print_list();
    std::cout << "List size: " << myList.get_size() << "\n";

    // checks the node of specific number 
    int valToSearch = 3;
    bool foundVal = myList.search(valToSearch);
    if (foundVal) {
        std::cout << valToSearch << " is in the list.\n";
    } else {
        std::cout << valToSearch << " is not in the list.\n";
    }

    // swap function 
    myList.push_back(7);
    myList.push_back(8);
    myList.push_back(9);
    myList.print_list();
    myList.swap_values(9, 2);
    std::cout << "Print list: \n";
    myList.print_list();

    // removing nodes
    myList.push_back(9);
    myList.push_back(3);
    myList.push_back(9);
    myList.print_list();
    myList.remove_nodes(5);
    myList.remove_nodes(9);
    myList.remove_nodes(4);
    std::cout << "Print list: \n";
    myList.print_list();

    // reverse function 
    myList.push_back(9);
    myList.push_back(3);
    myList.push_back(9);
    myList.print_list();
    myList.reverse();
    std::cout << "Print list: \n";
    myList.print_list();


  return 0;
}
